---
import NextJS from "./icons/NextJS.astro"
import Tailwind from "./icons/Tailwind.astro"
import Angular from "./icons/Angular.astro"
import NodeJS from "./icons/NodeJS.astro"
import Bootstrap from "./icons/Bootstrap.astro"
import ProjectModal from "./ProjectModal.astro"

const TAGS = {
    NEXT: { name: "Next.js", class: "bg-black text-white", icon: NextJS },
    TAILWIND: { name: "Tailwind CSS", class: "bg-[#003159] text-white", icon: Tailwind },
    ANGULAR: { name: "Angular", class: "bg-[#000000] text-white", icon: Angular },
    NODEJS: { name: "Node JS", class: "bg-[#01611f] text-white", icon: NodeJS },
    BOOTSTRAP: { name: "Bootstrap", class: "bg-[#bbaefc] text-white", icon: Bootstrap },
}

const PROJECTS = [
    {
        title: "Sistema ERP para la gestión de tiendas de ropa",
        description:
            "Aplicación para la gestión de una tienda de ropa, incluyendo el registro de empleados y clientes. Integración con API de AFIP/ARCA.",
        link: "",
        github: "",
        image: "public/projects/calido-home.png",
        tags: [TAGS.ANGULAR, TAGS.NODEJS, TAGS.TAILWIND],
    },
    {
        title: "Caja de Jubilaciones - CIDI - Gobierno de Córdoba",
        description: "Plataforma para la gestión de pensiones y jubilaciones del gobierno de Córdoba.",
        link: "",
        github: "",
        image: "public/projects/cj-home.png",
        tags: [TAGS.ANGULAR, TAGS.NODEJS, TAGS.BOOTSTRAP],
    },
    {
        title: "Gestión de Calidad Alimentaria - CIDI - Gobierno de Córdoba",
        description: "Plataforma para la gestión de trámites vinculados al transporte de alimentos en la provincia.",
        link: "",
        github: "",
        image: "public/projects/ga-home.png",
        tags: [TAGS.ANGULAR, TAGS.NODEJS, TAGS.BOOTSTRAP],
    },
]

// Estado para controlar qué proyecto está seleccionado
let selectedProject = null

function openProject(project) {
    selectedProject = project
}

function closeProject() {
    selectedProject = null
}
---

<div class="flex flex-col gap-y-16">
    {
        PROJECTS.map((project) => (
                <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0 cursor-pointer"
                         onClick={() => openProject(project)}
                >
                    <div class="w-full md:w-1/2">
                        <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl">
                            <img alt="Bautista Mendibe portfolio" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={project.image} />
                        </div>
                    </div>

                    <div class="w-full md:w-1/2 md:max-w-lg">
                        <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                            {project.title}
                        </h3>
                        <div class="flex flex-wrap mt-2">
                            <ul class="flex flex-row mb-2 gap-x-2">
                                {project.tags.map((tag) => (
                                        <li>
                    <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}>
                      <tag.icon class="size-4" />
                        {tag.name}
                    </span>
                                        </li>
                                ))}
                            </ul>
                            <div class="mt-2 text-gray-700 dark:text-gray-400">{project.description}</div>
                        </div>
                    </div>
                </article>
        ))
    }
</div>

<!-- Mostrar el modal si hay un proyecto seleccionado -->
{selectedProject && (
<ProjectModal
    {...selectedProject}
    onClose={() => openProject(null)}
/>
    )}
